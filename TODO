

## Change peers_op_handler from

    wish_core_send_message(core, connection, bson_data(&bs), bson_size(&bs));

to using:

    wish_rpc_server_emit(req, ...)

Remove res: { data: {} }

## Rename the wish_context_state and context_state member, they are connection state

typedef struct wish_context {
    ...
    enum wish_context_state context_state;
    ...
}

## Create per connection rpc_client instead of core->core_rpc_client

Hide complexity of sending by configuring the client correctly and fix sending 
automatically instead of just filling in the details of the bson package like
how it is currently used in:

wish_api_services_send(...) {

    wish_rpc_client_bson(...)

    wish_core_send_message(core, connection, bson_data(&b), bson_size(&b));

}        

Should do something like:

on_connection_init() {
    wish_rpc_client_set_send_handler(wish_connection_send)
    wish_rpc_client_set_send_context(connection)
}

wish_api_services_send(...) {
    wish_rpc_client_request(connection->rpc_client, &bs)
}        
